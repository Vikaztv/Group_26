JSON
 4. Создать внешний репозиторий c названием JSON. - 
На github нажать New, затем дать название  и создать.
 5. Клонировать репозиторий JSON на локальный компьютер.--
Скопировать ссылку Http и в терминале git clone https://github.com/Vikaztv/JSON.git
 6. Внутри локального JSON создать файл “new.json”.
cat > new.json
 7. Добавить файл под гит.
git status
git add new.json
 8. Закоммитить файл.
git commit -m "add new.json file"
 9. Отправить файл на внешний GitHub репозиторий.
git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 vim new.json 
{
	"name": "Viktoryia",
	"surname": "Zaitsava",
	"patronymic": "Alexandrovna",
	"age": 25,
	"pets": 1,
	"salary": 5000
}

 11. Отправить изменения на внешний репозиторий.
git commit -am "add new.json"
git push
 12. Создать файл preferences.json
cat > preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferences.json 
{
	"Favorite movie": "The Notebook",
	"Favorite serial": "The big bang theory",
	"Favorite meal": "Sandwhich",	
	"Favorite season": "Summer",
	"The country u wish to visit": "Swizeland"
}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
cat > skills.json
{
	"skills": "Postman",
	"JSON": "JavaScript Object Notation"	
}

 15. Отправить сразу 2 файла на внешний репозиторий.
git add . 
git commit -m "add  files" 
git push
 16. На веб интерфейсе создать файл bug_report.json.
Add file-create new file-дать название
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажать Commit new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
Edit -и вносим изменения 
{
  "Заголовок": "Короткое описание проблемы",
  "Проект": "Название тестируемого проекта",
  "Компонент приложения":"Название части или функции тестируемого продукта",
   "Номер версии":"Версия, на которой была найдена ошибка",
   "Критичность":"Наиболее распространена пятиуровневая система критичности",
   "Приоритет":"Приоритет дефекта",
   "Статус":"Статус бага",
   "Автор ":"Создатель баг репорта",
  "Назначен на":"Имя сотрудника, назначенного на решение проблемы",
  "Описание":"Информация об окружении, на котором был найден баг",
  "Прикрепленный файл":"Файл с логами"
 }
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
нажать Commit
 20. Синхронизировать внешний и локальный репозиторий JSON 
git pull-git push

XML
 21. Создать внешний репозиторий c названием XML.
На github нажать New, затем дать название  и создать.
 22. Клонировать репозиторий XML на локальный компьютер.
 Копировать ссылку Http и в терминале git clone https://github.com/Vikaztv/XML.git
 23. Внутри локального XML создать файл “new.xml”.
cat > new.xml
 24. Добавить файл под гит.
git status
git add new.xml
 25. Закоммитить файл.
git commit -m "Add new.xml file"
 26. Отправить файл на внешний GitHub репозиторий.
git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
vim new.xml 
<?xml version="1.0"?>
<myself>
	<NAME="Зайцева Виктория Александровна">
	<AGE>25</AGE>
	<PETS>1</PETS>
	<SALARY>5000</SALARY>
</myself>
 28. Отправить изменения на внешний репозиторий.
git add new.xml
git commit -m "Add changes"
git push
 29. Создать файл preferences.xml
 cat > preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
<?xml version="2.0"?>
<preferences>
	<Favorite_movie>The Notebook</Favorite_movie>
	<Favorite_serial>The big bang theory</Favorite_serial>
	<Favorite_meal>Sandwhich</Favorite_meal>	
	<Favorite_season>Summer</Favorite_season>
	<The_country>Swizeland</The_country>
</preferences>
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
cat > sklls.xml 
<?xml version="3.0"?>
<skills>
	<English>level C1</English>
	<Responsible>high level</Responsible>
</skills>

 32. Сделать коммит в одну строку.
git add . 
git commit -am "add files new"
 33. Отправить сразу 2 файла на внешний репозиторий.
git push
 34. На веб интерфейсе создать файл bug_report.xml.
Add file-create new file-дать название
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажать Commit new file
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. 
<?xml version="4.0"?>
<bagreport>
  <BugSummary>Короткое описание проблемы</BugSummary>
  <Severity>Наиболее распространена пятиуровневая система критичности</Severity>
   <Steps_to_reproduce>шаги к воспроизведению</Steps_to_reproduce>
   <Actual_Result>результат</Actual_Result>
  < Expected_Result>ожидаемый результат</Expected_Result>
</bagreport>
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
нажать Commit
 38. Синхронизировать внешний и локальный репозиторий XML
git pull -git push

TXT
 1. Создать внешний репозиторий c названием TXT.
На github нажать New, затем дать название  и создать.
 2. Клонировать репозиторий TXT на локальный компьютер.
Копировать ссылку Http и в терминале git clone https://github.com/Vikaztv/TXT.git
 3. Внутри локального TXT создать файл “new.txt”.
 cat > new.txt
 4. Добавить файл под гит.
git status
git add new.txt
 5. Закоммитить файл.
git commit -m "Add new.txt"
 6. Отправить файл на внешний GitHub репозиторий.
git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
vim new.txt 
1)ФИО- Зайцева Виктория Александровна
2)Возраст-25
3)Кол-во домашних животных-1
4)Зарплата-5000
 8. Отправить изменения на внешний репозиторий.
git add new.txt
git commit -am "new version"
git push
 9. Создать файл preferences.txt
cat > preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
vim preferences.txt
1)Любимый фильм - дневник памяти
2)Любимый сериал - Теория большого взрыва
3)Еда- бутерброд
4)Время года -лето
5)Страна-Щвейцария                                
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
cat > skills.txt
vim skills.txt
1) Улучшаем уровень английского языка
2) Работа с форматом txt, его преимущества                                                                                                         
 12. Сделать коммит в одну строку.
git add .
git commit -am "add files new"
 13. Отправить сразу 2 файла на внешний репозиторий.
git push
 14. На веб интерфейсе создать файл bug_report.txt.
Add file-create new file-дать название
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажать Commit new file
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
Короткое описание (Summary):Короткое описание проблемы, явно указывающее на причину и тип ошибочной ситуации.
Проект (Project):Название тестируемого проекта
Компонент приложения (Component):Название части или функции тестируемого продукта
Номер версии (Version):	Версия на которой была найдена ошибка
Серьезность: (Severity):Наиболее распространена пятиуровневая система градации серьезности дефекта(S1 Блокирующий (Blocker),S2 Критический (Critical),S3 Значительный (Major),S4 Незначительный (Minor),S5 Тривиальный (Trivial)
Приоритет (Priority):Приоритет дефекта(P1 Высокий (High),P2 Средний (Medium),P3 Низкий (Low))
Статус (Status):Статус бага
Автор (Author):Создатель баг репорта
Назначен на (Assigned To):Имя сотрудника, назначенного на решение проблемы
Окружение:ОС / Сервис Пак и т.д. / Браузера + версия / ...	Информация об окружении, на котором был найден баг: операционная система, сервис пак, для WEB тестирования - имя и версия браузера и т.д.
Шаги воспроизведения (Steps to Reproduce):Шаги, по которым можно легко воспроизвести ситуацию, приведшую к ошибке.
Фактический Результат (Result):Результат, полученный после прохождения шагов к воспроизведению
Ожидаемый результат (Expected Result):Ожидаемый правильный результат
Дополнения:Прикрепленный файл (Attachment)	Файл с логами, скриншот или любой другой документ, который может помочь прояснить причину ошибки или указать на способ решения проблемы
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
нажать Commit
 18. Синхронизировать внешний и локальный репозиторий TXT
git pull -git push